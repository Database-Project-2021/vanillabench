
#
# Basic Parameters
#

# The running time for warming up before benchmarking
org.vanilladb.bench.BenchmarkerParameters.WARM_UP_INTERVAL=30000
# The running time for benchmarking
org.vanilladb.bench.BenchmarkerParameters.BENCHMARK_INTERVAL=60000
# The number of remote terminal executors for benchmarking
org.vanilladb.bench.BenchmarkerParameters.NUM_RTES=10
# 1 = Micro, 2 = TPC-C, 3 = TPC-E
# TPC-E dose not work for now
org.vanilladb.bench.BenchmarkerParameters.BENCH_TYPE=1
# Whether it enables the built-in profiler on the server
org.vanilladb.bench.BenchmarkerParameters.PROFILING_ON_SERVER=false
# The path to the generated reports
org.vanilladb.bench.StatisticMgr.OUTPUT_DIR=
# The granularity for summarizing the performance of benchmarking 
org.vanilladb.bench.StatisticMgr.GRANULARITY=3000
# Whether the RTEs display the results of each transaction
org.vanilladb.bench.rte.TransactionExecutor.DISPLAY_RESULT=false

#
# Connection Settings
#

# The hostname of the server
org.vanilladb.bench.BenchmarkerParameters.CONNECTION_HOST=127.0.0.1
# The port of the server (not working for VanillaCore)
org.vanilladb.bench.BenchmarkerParameters.CONNECTION_PORT=
# The database name in the server (not working for VanillaCore)
org.vanilladb.bench.BenchmarkerParameters.CONNECTION_DBNAME=
# The user name for authentication (not working for VanillaCore)
org.vanilladb.bench.BenchmarkerParameters.CONNECTION_USER=
# The user password for authentication (not working for VanillaCore)
org.vanilladb.bench.BenchmarkerParameters.CONNECTION_PASSWORD=
# Whether the client connects to the server using SSL (not working for VanillaCore)
org.vanilladb.bench.BenchmarkerParameters.CONNECTION_SSL=true
# 1 = JDBC, 2 = Stored Procedures
org.vanilladb.bench.BenchmarkerParameters.CONNECTION_MODE=1
# 1 = VanillaCore, 2 = PostgreSQL
org.vanilladb.bench.BenchmarkerParameters.JDBC_DRIVER=1

#
# Micro-benchmarks Parameters
#

# The number of items in the testing data set
org.vanilladb.bench.benchmarks.micro.MicrobenchConstants.NUM_ITEMS=100000
# The ratio of read-write transactions during benchmarking
org.vanilladb.bench.benchmarks.micro.rte.MicrobenchmarkParamGen.RW_TX_RATE=0.0
# The ratio of long-read transactions during benchmarking
org.vanilladb.bench.benchmarks.micro.rte.MicrobenchmarkParamGen.LONG_READ_TX_RATE=0.0
# The number of read records in a transaction
org.vanilladb.bench.benchmarks.micro.rte.MicrobenchmarkParamGen.TOTAL_READ_COUNT=10
# The number of hot record in the read set of a transaction
org.vanilladb.bench.benchmarks.micro.rte.MicrobenchmarkParamGen.LOCAL_HOT_COUNT=1
# The ratio of writes to the total reads of a transaction
org.vanilladb.bench.benchmarks.micro.rte.MicrobenchmarkParamGen.WRITE_RATIO_IN_RW_TX=0.5
# The conflict rate of a hot record
org.vanilladb.bench.benchmarks.micro.rte.MicrobenchmarkParamGen.HOT_CONFLICT_RATE=0.001


#
# TPC-C Parameters
#

# The number of warehouses in the testing data set
org.vanilladb.bench.tpcc.TpccConstants.NUM_WAREHOUSES=1
# The total number of frequency
org.vanilladb.bench.tpcc.TpccConstants.FREQUENCY_TOTAL=100
# The frequency of new-order transactions
org.vanilladb.bench.tpcc.TpccConstants.FREQUENCY_NEW_ORDER=50
# The frequency of payment transactions
org.vanilladb.bench.tpcc.TpccConstants.FREQUENCY_PAYMENT=50
# The frequency of order-status transactions
# XXX: Not implemented
org.vanilladb.bench.tpcc.TpccConstants.FREQUENCY_ORDER_STATUS=0
# The frequency of delivery transactions
# XXX: Not implemented
org.vanilladb.bench.tpcc.TpccConstants.FREQUENCY_DELIVERY=0
# The frequency of stock-level transactions
# XXX: Not implemented
org.vanilladb.bench.tpcc.TpccConstants.FREQUENCY_STOCK_LEVEL=0
# Whether it enables the thinking and keying time defined in TPC-C specification
org.vanilladb.bench.rte.tpcc.TpccTxExecutor.ENABLE_THINK_AND_KEYING_TIME=false


#
# TPC-E Parameters
#

# The position of the testing data generated by official TPC-E generator
org.vanilladb.bench.tpce.data.TpceDataManager.DATA_DIR=tpce_data
# The ratio of trade-order transactions
org.vanilladb.bench.tpce.TpceConstants.TARDE_ORDER_PERCENTAGE=0.8
